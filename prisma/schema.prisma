// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String    @id @default(uuid())
  name              String
  email             String    @unique
  password          String
  type              UserType
  emailVerified     Boolean   @default(false)
  emailVerifyToken  String?
  emailVerifyTokenExpires DateTime?
  refreshToken      String?
  created_at        DateTime  @default(now())
  updated_at        DateTime  @updatedAt
  client            Client?
}

model Client {
  id         String   @id @default(uuid())
  userId     String   @unique
  fullName   String
  contact    String
  address    String
  status     Boolean  @default(true)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  orders     Order[]
}

model Product {
  id          String         @id @default(uuid())
  name        String
  description String
  price       Decimal       @db.Decimal(10, 2)
  stock       Int
  created_at  DateTime      @default(now())
  updated_at  DateTime      @updatedAt
  category    Category        @relation(fields: [categoryId], references: [id])
  categoryId  String
  orderItems  OrderItem[]
}

model Order {
  id          String      @id @default(uuid())
  clientId    String
  status      OrderStatus @default(RECEIVED)
  orderDate   DateTime    @default(now())
  total       Decimal     @db.Decimal(10, 2)
  created_at  DateTime    @default(now())
  updated_at  DateTime    @updatedAt

  client      Client      @relation(fields: [clientId], references: [id])
  items       OrderItem[]
}

model OrderItem {
  id            String   @id @default(uuid())
  orderId       String
  productId     String
  quantity      Int
  unitPrice     Decimal  @db.Decimal(10, 2)
  subtotal      Decimal  @db.Decimal(10, 2)
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt

  order         Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product       Product  @relation(fields: [productId], references: [id])
}

model SalesReport {
  id           String   @id @default(uuid())
  period       DateTime
  totalSales   Decimal  @db.Decimal(10, 2)
  productsSold Int
  filePath     String
  created_at   DateTime @default(now())
}

model Cart {
  id         String   @id @default(uuid())
  clientId   String
  productId  String
  quantity   Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@unique([clientId, productId])
}

model Category {
  id          String    @id @default(uuid())
  name        String    @unique
  description String?
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  products    Product[]
}

enum UserType {
  ADMIN
  CLIENT
}

enum OrderStatus {
  RECEIVED
  IN_PREPARATION
  DISPATCHED
  DELIVERED
  CANCELLED
}